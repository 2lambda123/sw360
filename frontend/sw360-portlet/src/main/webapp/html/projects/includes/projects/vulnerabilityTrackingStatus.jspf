<%--
  ~ Copyright Siemens AG, 2018. Part of the SW360 Portal Project.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>
<%@ page import="org.eclipse.sw360.datahandler.common.SW360Constants" %>

<c:set var="siemensSvmComponentId" value="<%=SW360Constants.SIEMENS_SVM_COMPONENT_ID%>"/>

<core_rt:if test="${releasesAndProjects.size() == 0 }">
    <h3>Please add linked releases or projects with linked releases to view their vulnerabilities tracking status here.</h3>
</core_rt:if>
<core_rt:if test="${releasesAndProjects.size()  > 0 }">
    <div id="vulnerabilityTrackingTableDiv">
        <table id="vulnerabilityTrackingTable" cellpadding="0" cellspacing="0" border="0" class="display">
            <tfoot>
            <tr>
                <th width="30%"></th>
                <th width="30%"></th>
                <th></th>
                <th></th>
            </tr>
            </tfoot>
        </table>
    </div>
</core_rt:if>

<link rel="stylesheet" href="<%=request.getContextPath()%>/webjars/datatables.net-buttons-dt/1.1.2/css/buttons.dataTables.min.css"/>
<link rel="stylesheet" href="<%=request.getContextPath()%>/webjars/jquery-ui/1.12.1/jquery-ui.css">
<link rel="stylesheet" href="<%=request.getContextPath()%>/css/sw360.css">
<link rel="stylesheet" href="<%=request.getContextPath()%>/css/dataTable_Siemens.css">

<script type="text/javascript">

    require(['jquery', /* jquery-plugins */ 'datatables', 'datatables_buttons', 'buttons.print'], function ($) {
        var vulnerabilityTrackingTable;

        Liferay.on('allPortletsReady', function() {
            createVulnerabilityTrackingTable();
        });

        function renderVulnerabilityTrackingStatus(svmId) {
            // test that the svmId is a string and contains an integer (ignoring leading and trailing whitespace)
            if (typeof svmId === "string" && new RegExp("^\\d+$").test(svmId.trim())){
                return "<span class='notificationBulletInline backgroundOK' title='SVM id: " + svmId + "'>tracked</span>";
            } else {
                return "<span class='notificationBulletInline backgroundGrey'>not tracked</span>";
            }
        }
        function createVulnerabilityTrackingTable() {
            var result = [];

            <core_rt:forEach items="${releasesAndProjects}" var="releasesClearingStatusData">
            result.push({
                "DT_RowId": "${releasesClearingStatusData.release.id}",
                "0": "<sw360:DisplayReleaseLink release="${releasesClearingStatusData.release}" showFullname="true"/>",
                "1": "<sw360:out value="${releasesClearingStatusData.projectNames}"/>",
                "2": "${releasesClearingStatusData.release.externalIds[siemensSvmComponentId]}",
                "3": "<sw360:DisplayEnum value="${releasesClearingStatusData.componentType}"/>"
            });
            </core_rt:forEach>

            loadDataTableExtension();
            vulnerabilityTrackingTable = $('#vulnerabilityTrackingTable').DataTable({
                data: result,
                dom: "lBfrtip",
                buttons: [
                    {
                        extend: 'print',
                        text: 'Print',
                        autoPrint: true,
                        className: 'custom-print-button',
                        exportOptions: {
                            columns: [0, 1, 2, 3]
                        }
                    }
                ],
                columns: [
                    {title: "Name"},
                    {title: "Project Origin"},
                    {title: "SVM Tracking Status", render: renderVulnerabilityTrackingStatus},
                    {title: "Type"},
                ],
                pagingType: "simple_numbers",
                autoWidth: false
            });
        }
    });
</script>
