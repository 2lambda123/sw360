<%--
  ~ Copyright Siemens AG, 2016-2017, 2019. Part of the SW360 Portal Project.
  ~ With modifications from Bosch Software Innovations GmbH, 2016.
  ~
  ~ SPDX-License-Identifier: EPL-1.0
  ~
  ~ All rights reserved. This program and the accompanying materials
  ~ are made available under the terms of the Eclipse Public License v1.0
  ~ which accompanies this distribution, and is available at
  ~ http://www.eclipse.org/legal/epl-v10.html
--%>
<%@ page import="com.liferay.portal.kernel.portlet.PortletURLFactoryUtil" %>
<%@ page import="javax.portlet.PortletRequest" %>
<%@ page import="org.eclipse.sw360.portal.common.page.PortletReleasePage" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.RequestStatus" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.vulnerabilities.Vulnerability" %>
<%@ page import="org.eclipse.sw360.datahandler.thrift.vulnerabilities.VulnerabilityRatingForProject" %>
<%@ page import="org.eclipse.sw360.portal.common.PortalConstants" %>

<portlet:resourceURL var="updateProjectVulnerabilitiesURL">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITIES_PROJECT%>"/>
</portlet:resourceURL>
<portlet:resourceURL var="updateVulnerabilityRatings">
    <portlet:param name="<%=PortalConstants.ACTION%>" value="<%=PortalConstants.UPDATE_VULNERABILITY_RATINGS%>"/>
</portlet:resourceURL>

<jsp:useBean id="vulnerabilityList" type="java.util.List<org.eclipse.sw360.datahandler.thrift.vulnerabilities.VulnerabilityDTO>" scope="request"/>
<jsp:useBean id="vulnerabilityRatings" type="java.util.Map<java.lang.String, org.eclipse.sw360.datahandler.thrift.vulnerabilities.VulnerabilityRatingForProject>" scope="request"/>
<jsp:useBean id="writeAccessUser" type="java.lang.Boolean" scope="request"/>
<jsp:useBean id="vulnerabilityCheckstatusTooltips" type="java.util.Map<java.lang.String, java.lang.String>" scope="request"/>
<jsp:useBean id="vulnerabilityMatchedByHistogram" type="java.util.Map<java.lang.String, java.lang.Long>" scope="request"/>

<jsp:useBean id="viewSize" type="java.lang.Integer" scope="request"/>

<div class="container">
    <core_rt:if test="${project.enableVulnerabilitiesDisplay}">
        <div class="row">
            <div class="col">
                <div class="alert alert-info" role="alert">
                    Total vulnerabilities: <strong>${numberOfVulnerabilities}</strong>
                </div>
            </div>
        </div>
    </core_rt:if>
    <div class="row stateinfo">
        <div class="col">
            Security Vulnerability Monitoring:
            <core_rt:if test="${project.enableSvm}">
                <span class="badge badge-success">Enabled</span>
            </core_rt:if>
            <core_rt:if test="${not project.enableSvm}">
                <span class="badge badge-light">Disabled</span>
            </core_rt:if>
        </div>
        <div class="col">
            Security Vulnerabilities Display:
            <core_rt:if test="${project.enableVulnerabilitiesDisplay}">
                <span class="badge badge-success">Enabled</span>
            </core_rt:if>
            <core_rt:if test="${not project.enableVulnerabilitiesDisplay}">
                <span class="badge badge-light">Disabled</span>
            </core_rt:if>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <form class="form-inline">
                <table id="vulnerabilityTable" class="table table-bordered" data-view-size="${viewSize}"></table>
                <core_rt:if test="${writeAccessUser}">
                    <div class="form-group">
                        <label for="rating-change-for-selected">Change rating of selected vulnerabilities to</label>
                        <select id="rating-change-for-selected" class="form-control" name="<portlet:namespace/><%=VulnerabilityRatingForProject.class%>">
                            <sw360:DisplayEnumOptions type="<%=VulnerabilityRatingForProject.class%>" inQuotes="true"/>
                        </select>
                        <button id="apply-to-selected" type="button" class="btn btn-primary">Change rating</button>
                    </div>
                </core_rt:if>
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <ul>
                <core_rt:forEach items="${vulnerabilityMatchedByHistogram.keySet()}" var="matchedBy">
                    <li>
                        <b><sw360:out value='${vulnerabilityMatchedByHistogram.get(matchedBy)}'/></b>
                        of the vulnerabilities were matched by
                        <b><sw360:out value='${matchedBy}'/></b>
                    </li>
                </core_rt:forEach>
            </ul>
        </div>
    </div>
</div>

<%@include file="/html/utils/includes/vulnerabilityModal.jspf" %>

<script type="text/javascript">
    require(['jquery', 'bridges/datatables', 'modules/dialog'], function ($, datatable, dialog) {
        var vulnerabilityTable;
        var modal;

        createVulnerabilityTable();
        vulnerabilityTable.$('[data-action="select-all"]').on('change', function(event) {
            if($(event.currentTarget).is(':checked')) {
                vulnerabilityTable.rows().select();
            } else {
                vulnerabilityTable.rows().deselect();
            }
        });

        var viewSize = $('#vulnerabilityTable').data().viewSize;
        $('#btnShowVulnerabilityCount [data-name="count"]').text(viewSize > 0 ? 'latest ' + viewSize : 'all');
        $('#btnShowVulnerabilityCount + div > a').on('click', function(event) {
            var viewSize = $(event.currentTarget).data().type;

            var PortletURL = Liferay.PortletURL;
            var portletURL = PortletURL.createURL('<%= PortletURLFactoryUtil.create(request, portletDisplay.getId(), themeDisplay.getPlid(), PortletRequest.RENDER_PHASE) %>');
            portletURL.setParameter('<%=PortalConstants.PAGENAME%>', '<%=PortalConstants.PAGENAME_DETAIL%>');
            portletURL.setParameter('<%=PortalConstants.PROJECT_ID%>', '${project.id}');
            portletURL.setParameter('<%=PortalConstants.VIEW_SIZE%>', viewSize);

            window.location.href = portletURL.toString() + window.location.hash;
        });

        <core_rt:if test="${writeAccessUser}">
            $('#apply-to-selected').on('click', function () {
                batchChangeRating();
            });
        </core_rt:if>

        function createVulnerabilityTable() {
            var result = [];

            <core_rt:if test="${project.enableVulnerabilitiesDisplay}">
            <core_rt:forEach items="${vulnerabilityList}" var="vulnerability">
            result.push({
                "DT_RowId": "${vulnerability.id}",
                "0": '',
                "1": '<sw360:out value="${vulnerability.intReleaseName}"/>',
                "2": "<sw360:DisplayVulnerabilityLink vulnerabilityId="${vulnerability.externalId}"/>",
                "3": '<div class="dataTables_cell_nowrap" title="<sw360:out value='${vulnerability.priorityToolTip}'/>">${vulnerability.priority}<img class="infopic" src="/sw360-portlet/images/ic_info.png"/></div>',
                "4": '<span title="Found with needle: <sw360:out value='${vulnerability.usedNeedle}'/>"><sw360:out value='${vulnerability.matchedBy}'/></span>',
                "5": '<div class="dataTables_cell_nowrap" style="max-width:500px;" title="<sw360:out value='${vulnerability.title} - ${vulnerability.description}'/>">' +
                        '<sw360:out value='${vulnerability.title}'/></div>',
                "6": "<span title='<sw360:out value="${vulnerabilityCheckstatusTooltips.get(vulnerability.externalId).get(vulnerability.intReleaseId)}"/>'><sw360:DisplayEnum value="${vulnerabilityRatings.get(vulnerability.externalId).get(vulnerability.intReleaseId)}"/></span>",
                "7": '<div class="dataTables_cell_nowrap"><sw360:out value="${vulnerability.action}"/></div>',
                "externalId": "<sw360:out value="${vulnerability.externalId}"/>",
                "intReleaseId": "<sw360:out value="${vulnerability.intReleaseId}"/>"
            });
            </core_rt:forEach>
            </core_rt:if>

            vulnerabilityTable = datatable.create('#vulnerabilityTable', {
                <core_rt:if test="${writeAccessUser}">
                    columnDefs: [{
                        orderable: false,
                        className: 'select-checkbox',
                        checkboxes: {
                            selectRow: true
                        },
                        targets: 0
                    }],
                    select: {
                        style: 'multi+shift'
                    },
                </core_rt:if>
                <core_rt:if test="${not project.enableVulnerabilitiesDisplay}">
                    language: {
                        'emptyTable': 'Vulnerabilities display is disabled in this project'
                    },
                </core_rt:if>
                data: result,
                columns: [
                    {"title": '<input data-action="select-all" type="checkbox"/>'},
                    {"title": "Release"},
                    {"title": "External id"},
                    {"title": "Priority"},
                    {"title": "Matched by"},
                    {"title": "Title"},
                    {"title": "Relevance for project"},
                    {"title": "Action", className: "actions" }
                ],
                "order": [[3, 'asc'], [4, 'desc']],
            });
            vulnerabilityTable.$('td').tooltip({
                "delay": 0,
                "track": true,
                "fade": 250,
                "content": function () {
                    return $(this).prop('title');
                }
            });
        }

        <core_rt:if test="${writeAccessUser}">
            function batchChangeRating() {
                var selectedRows = vulnerabilityTable.rows('.selected');
                var selectedValue = $("#rating-change-for-selected").children("option:selected");

                var newValue = selectedValue.val();
                var newValueText = selectedValue.text();

                var $dialog = dialog.open('#vulnerabilityDialog', {
                    vulnerabilityCount: selectedRows.data().length,
                    verification: newValueText
                }, function(submit, callback, data) {
                    executeRatingChange(selectedRows, newValue, newValueText, data.comment).then(function() {
                        callback(true);
                    }).catch(function(error) {
                        $dialog.alert(error);
                        callback();
                    });
                });
            }

            function executeRatingChange(selectedRows, newValue, newValueText, comment) {
                var vulnerabilityIds = [];
                var releaseIds = [];

                selectedRows.data().each(function (item) {
                    vulnerabilityIds.push(item['externalId']);
                    releaseIds.push(item['intReleaseId']);
                });

                var data = {};
                data["<portlet:namespace/><%=PortalConstants.PROJECT_ID%>"] = "${project.id}";
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_IDS%>"] = vulnerabilityIds;
                data["<portlet:namespace/><%=PortalConstants.RELEASE_IDS%>"] = releaseIds;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_RATING_VALUE%>"] = newValue;
                data["<portlet:namespace/><%=PortalConstants.VULNERABILITY_RATING_COMMENT%>"] = comment;

                return new Promise(function(resolve, reject) {
                    $.ajax({
                        url: '<%=updateVulnerabilityRatings%>',
                        type: 'POST',
                        dataType: 'json',
                        data: data,
                        success: function(response){
                            switch (response.<%=PortalConstants.REQUEST_STATUS%>) {
                                case '<%=RequestStatus.FAILURE%>':
                                    reject("Update failed.");
                                    break;
                                case '<%=RequestStatus.SUCCESS%>':
                                    document.getElementById("numberOfVulnerabilitiesDiv").class = "bg-warning";
                                    document.getElementById("numberOfVulnerabilitiesDiv").innerHTML = '&#8634;';

                                    selectedRows.every(function () {
                                        var row = this.data();
                                        row["6"] = "<span title='You just changed this value.'>" + newValueText + "</span>";
                                        this.invalidate();
                                    });
                                    vulnerabilityTable.draw();
                                    resolve();
                                    break;
                                default:
                            }
                        },
                        error: function() {
                            reject('Unknown request error.');
                        }
                    });
                });
            }
        </core_rt:if>
    });
</script>
